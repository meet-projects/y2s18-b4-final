
    /*
     *
     *                           .__  .__ __
     *  __ __  ______ ___________|  | |__|  | __ ____
     * |  |  \/  ___// __ \_  __ \  | |  |  |/ // __ \
     * |  |  /\___ \\  ___/|  | \/  |_|  |    <\  ___/
     * |____//____  >\___  >__|  |____/__|__|_ \\___  >
     *            \/     \/                   \/    \/
     *
     *
     * (c) 2017, Userlike - https://www.userlike.com
     *
     * Userlike Chat Client
     * Appkey:    7b25d59d-0124-3419-bfd5-5facae60f4cf
     * Widgetkey: 91bacedf5aeede09a2f703958eae5052f89081bf136c93398d0f74eb5945a215
     * Version:   3
     * Created:   2018-06-18 10:42:35.223743+00:00
     *
     */
    
    (function (root, factory) {
      if (!(root.userlike && root.userlike._router) && (typeof define === 'function' && define.amd && (typeof require !== "function" || (typeof require === "function" &&
          typeof require.specified === "function" && require.specified('userlike-loader'))))) {

          return define('userlike-loader', function() {
            return factory.call(this, root, true);
          });
      } else {
        return factory.call(this, root, false).load();
      }
    }(window, function(root, tryRjs) {
      var options, api;
      if (tryRjs == null) { tryRjs = true; }
      root.userlike = root.userlike || {};
      root.userlike.loader = function(src) {
        var script;
        if (tryRjs) {
            try {
                require.config({
                    paths: { 'userlike': src.replace(/\.js$/, '') }
                });
                require(['userlike'], function(userlike) {});
                return true;
            } catch (e) {
                if (window.console && window.console.log) {
                    window.console.log("RequireJS failed to load userlike module");
                }
            }
        }
        script = document.createElement("script");
        script.setAttribute("type", "text/javascript");
        script.setAttribute("src", src);
        return document.getElementsByTagName("head")[0].appendChild(script);
      };
      return api = {
        options: {},
        configure: function(opt) {
          if (typeof opt === 'object') { api.options = opt; }
          return api;
        },
        load: function(opt) {
          api.configure(opt);
          if (root.userlike._config===undefined ) {
            root.userlike._config = {'app_key': '7b25d59d-0124-3419-bfd5-5facae60f4cf', 'widget_key': '91bacedf5aeede09a2f703958eae5052f89081bf136c93398d0f74eb5945a215', 'data': '', 'options': api.options};
            root.userlike.loader('//dq4irj27fs462.cloudfront.net/javascripts/userlike-production-1005.min.js');
          }
          return root.userlike;
        }
      };
    }));
    